/* tslint:disable */
/* eslint-disable */
/**
 * Cat Facts API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Breed
 * @export
 * @interface Breed
 */
export interface Breed {
    /**
     * Breed
     * @type {string}
     * @memberof Breed
     */
    breed?: string;
    /**
     * Country
     * @type {string}
     * @memberof Breed
     */
    country?: string;
    /**
     * Origin
     * @type {string}
     * @memberof Breed
     */
    origin?: string;
    /**
     * Coat
     * @type {string}
     * @memberof Breed
     */
    coat?: string;
    /**
     * Pattern
     * @type {string}
     * @memberof Breed
     */
    pattern?: string;
}

/**
 * Check if a given object implements the Breed interface.
 */
export function instanceOfBreed(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BreedFromJSON(json: any): Breed {
    return BreedFromJSONTyped(json, false);
}

export function BreedFromJSONTyped(json: any, ignoreDiscriminator: boolean): Breed {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'breed': !exists(json, 'breed') ? undefined : json['breed'],
        'country': !exists(json, 'country') ? undefined : json['country'],
        'origin': !exists(json, 'origin') ? undefined : json['origin'],
        'coat': !exists(json, 'coat') ? undefined : json['coat'],
        'pattern': !exists(json, 'pattern') ? undefined : json['pattern'],
    };
}

export function BreedToJSON(value?: Breed | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'breed': value.breed,
        'country': value.country,
        'origin': value.origin,
        'coat': value.coat,
        'pattern': value.pattern,
    };
}

