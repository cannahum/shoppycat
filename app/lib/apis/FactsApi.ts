/* tslint:disable */
/* eslint-disable */
/**
 * Cat Facts API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CatFact,
} from '../models/index';
import {
    CatFactFromJSON,
    CatFactToJSON,
} from '../models/index';

export interface GetFactsRequest {
    maxLength?: number;
    limit?: number;
}

export interface GetRandomFactRequest {
    maxLength?: number;
}

/**
 * 
 */
export class FactsApi extends runtime.BaseAPI {

    /**
     * Returns a a list of facts
     * Get a list of facts
     */
    async getFactsRaw(requestParameters: GetFactsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<CatFact>>> {
        const queryParameters: any = {};

        if (requestParameters.maxLength !== undefined) {
            queryParameters['max_length'] = requestParameters.maxLength;
        }

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/facts`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(CatFactFromJSON));
    }

    /**
     * Returns a a list of facts
     * Get a list of facts
     */
    async getFacts(requestParameters: GetFactsRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<CatFact>> {
        const response = await this.getFactsRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Returns a random fact
     * Get Random Fact
     */
    async getRandomFactRaw(requestParameters: GetRandomFactRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CatFact>> {
        const queryParameters: any = {};

        if (requestParameters.maxLength !== undefined) {
            queryParameters['max_length'] = requestParameters.maxLength;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/fact`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CatFactFromJSON(jsonValue));
    }

    /**
     * Returns a random fact
     * Get Random Fact
     */
    async getRandomFact(requestParameters: GetRandomFactRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CatFact> {
        const response = await this.getRandomFactRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
